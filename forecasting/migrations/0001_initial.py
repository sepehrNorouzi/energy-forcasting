# Generated by Django 5.2.5 on 2025-08-10 15:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ForecastModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('model_type', models.CharField(choices=[('linear_regression', 'Linear Regression'), ('random_forest', 'Random Forest'), ('neural_network', 'Neural Network'), ('arima', 'ARIMA'), ('prophet', 'Prophet'), ('ensemble', 'Ensemble')], max_length=20)),
                ('country_code', models.CharField(max_length=10)),
                ('target_variable', models.CharField(max_length=50)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('feature_columns', models.JSONField(blank=True, default=list)),
                ('training_start_date', models.DateTimeField()),
                ('training_end_date', models.DateTimeField()),
                ('training_samples', models.PositiveIntegerField(blank=True, null=True)),
                ('mae', models.FloatField(blank=True, null=True)),
                ('rmse', models.FloatField(blank=True, null=True)),
                ('mape', models.FloatField(blank=True, null=True)),
                ('r2_score', models.FloatField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('model_file_path', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EnergyForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(db_index=True, max_length=10)),
                ('forecast_timestamp', models.DateTimeField(db_index=True)),
                ('target_timestamp', models.DateTimeField(db_index=True)),
                ('predicted_value', models.FloatField()),
                ('confidence_lower', models.FloatField(blank=True, null=True)),
                ('confidence_upper', models.FloatField(blank=True, null=True)),
                ('actual_value', models.FloatField(blank=True, null=True)),
                ('horizon_hours', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecasts', to='forecasting.forecastmodel')),
            ],
            options={
                'indexes': [models.Index(fields=['country_code', 'target_timestamp'], name='forecasting_country_7ab938_idx'), models.Index(fields=['forecast_timestamp'], name='forecasting_forecas_c5a00b_idx')],
                'unique_together': {('model', 'target_timestamp')},
            },
        ),
        migrations.CreateModel(
            name='ModelPerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_date', models.DateField()),
                ('evaluation_period_days', models.PositiveIntegerField(default=30)),
                ('mae', models.FloatField()),
                ('rmse', models.FloatField()),
                ('mape', models.FloatField()),
                ('forecast_count', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='forecasting.forecastmodel')),
            ],
            options={
                'ordering': ['-evaluation_date'],
                'unique_together': {('model', 'evaluation_date')},
            },
        ),
    ]
